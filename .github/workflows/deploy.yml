name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java and Maven
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build all services with Maven
        run: |
          chmod +x build-all.sh
          ./build-all.sh

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install docker-compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose --version

      - name: Start local Docker Registry
        run: |
          docker run -d -p 5000:5000 --name registry registry:2
          sleep 10

      - name: Build and push auth-service
        run: |
          docker build -t localhost:5000/fooddelivery-auth:latest -f AuthService/Dockerfile ./AuthService
          docker push localhost:5000/fooddelivery-auth:latest

      - name: Build and push user-service
        run: |
          docker build -t localhost:5000/fooddelivery-user:latest -f UserService/Dockerfile ./UserService
          docker push localhost:5000/fooddelivery-user:latest

      - name: Build and push gateway-service
        run: |
          docker build -t localhost:5000/fooddelivery-gateway:latest -f GatewayService/Dockerfile ./GatewayService
          docker push localhost:5000/fooddelivery-gateway:latest

      - name: Build and push restaurant-service
        run: |
          docker build -t localhost:5000/fooddelivery-restaurant:latest -f RestaurantService/Dockerfile ./RestaurantService
          docker push localhost:5000/fooddelivery-restaurant:latest

      - name: Build and push catalog-service
        run: |
          docker build -t localhost:5000/fooddelivery-catalog:latest -f CatalogService/Dockerfile ./CatalogService
          docker push localhost:5000/fooddelivery-catalog:latest

      - name: Build and push order-service
        run: |
          docker build -t localhost:5000/fooddelivery-order:latest -f OrderService/Dockerfile ./OrderService
          docker push localhost:5000/fooddelivery-order:latest

      - name: Build and push courier-service
        run: |
          docker build -t localhost:5000/fooddelivery-courier:latest -f CourierService/Dockerfile ./CourierService
          docker push localhost:5000/fooddelivery-courier:latest

      - name: Verify images in registry
        run: |
          echo "=== Images in registry ==="
          curl -s http://localhost:5000/v2/_catalog | jq .
          echo "=== Auth service tags ==="
          curl -s http://localhost:5000/v2/fooddelivery-auth/tags/list | jq .

      - name: Deploy and test
        run: |
          sed -i 's|build: ./AuthService|image: localhost:5000/fooddelivery-auth:latest|g' docker-compose.yml
          sed -i 's|build: ./UserService|image: localhost:5000/fooddelivery-user:latest|g' docker-compose.yml
          sed -i 's|build: ./GatewayService|image: localhost:5000/fooddelivery-gateway:latest|g' docker-compose.yml
          sed -i 's|build: ./RestaurantService|image: localhost:5000/fooddelivery-restaurant:latest|g' docker-compose.yml
          sed -i 's|build: ./CatalogService|image: localhost:5000/fooddelivery-catalog:latest|g' docker-compose.yml
          sed -i 's|build: ./OrderService|image: localhost:5000/fooddelivery-order:latest|g' docker-compose.yml
          sed -i 's|build: ./CourierService|image: localhost:5000/fooddelivery-courier:latest|g' docker-compose.yml
          
          echo "=== Modified docker-compose.yml ==="
          grep -A 3 "auth-service:" docker-compose.yml
          
          docker-compose up -d
          echo "Waiting for services to start..."
          sleep 60
          
          for service in auth-service user-service gateway-service; do
            if [ -z "$(docker ps -q -f name=$service)" ]; then
              echo "Error: $service container is not running"
              docker-compose logs $service
              docker-compose down --volumes
              exit 1
            fi
          done
          
          echo "=== Testing authentication ==="
          AUTH_RESPONSE=$(curl -s -X POST http://localhost:8081/api/auth/login \
            -H "Content-Type: application/json" \
            -d '{"login":"admin123", "password":"admin123", "email":"admin@example.com"}' || echo "auth_failed")
          
          echo "Auth response: $AUTH_RESPONSE"
          
          if [ "$AUTH_RESPONSE" = "auth_failed" ]; then
            echo "Authentication test failed"
            docker-compose logs auth-service
            docker-compose down --volumes
            exit 1
          else
            echo "Authentication test passed!"
            echo "Received JWT token"
          fi
          
          echo "ALL TESTS PASSED SUCCESSFULLY!"
        
          docker-compose down --volumes

      - name: Cleanup
        run: |
          docker stop registry || true
          docker rm registry || true