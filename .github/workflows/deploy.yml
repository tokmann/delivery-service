name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java and Maven
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build all services with Maven
        run: |
          chmod +x build-all.sh
          ./build-all.sh

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install docker-compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose --version

      - name: Start local Docker Registry
        run: |
          docker run -d -p 5000:5000 --name registry registry:2
          sleep 5

      - name: Build and push auth-service
        run: |
          docker build -t localhost:5000/fooddelivery-auth:latest -f AuthService/Dockerfile ./AuthService
          docker push localhost:5000/fooddelivery-auth:latest

      - name: Build and push user-service
        run: |
          docker build -t localhost:5000/fooddelivery-user:latest -f UserService/Dockerfile ./UserService
          docker push localhost:5000/fooddelivery-user:latest

      - name: Build and push gateway-service
        run: |
          docker build -t localhost:5000/fooddelivery-gateway:latest -f GatewayService/Dockerfile ./GatewayService
          docker push localhost:5000/fooddelivery-gateway:latest

      - name: Build and push restaurant-service
        run: |
          docker build -t localhost:5000/fooddelivery-restaurant:latest -f RestaurantService/Dockerfile ./RestaurantService
          docker push localhost:5000/fooddelivery-restaurant:latest

      - name: Build and push catalog-service
        run: |
          docker build -t localhost:5000/fooddelivery-catalog:latest -f CatalogService/Dockerfile ./CatalogService
          docker push localhost:5000/fooddelivery-catalog:latest

      - name: Build and push order-service
        run: |
          docker build -t localhost:5000/fooddelivery-order:latest -f OrderService/Dockerfile ./OrderService
          docker push localhost:5000/fooddelivery-order:latest

      - name: Build and push courier-service
        run: |
          docker build -t localhost:5000/fooddelivery-courier:latest -f CourierService/Dockerfile ./CourierService
          docker push localhost:5000/fooddelivery-courier:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install docker-compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose --version

      - name: Start local Docker Registry
        run: |
          docker run -d -p 5000:5000 --name registry registry:2
          sleep 5

      - name: Run deployment tests
        run: |
          # Заменяем локальную сборку на образы из локального registry
          sed -i 's|build: ./AuthService|image: localhost:5000/fooddelivery-auth:latest|g' docker-compose.yml
          sed -i 's|build: ./UserService|image: localhost:5000/fooddelivery-user:latest|g' docker-compose.yml
          sed -i 's|build: ./GatewayService|image: localhost:5000/fooddelivery-gateway:latest|g' docker-compose.yml
          sed -i 's|build: ./RestaurantService|image: localhost:5000/fooddelivery-restaurant:latest|g' docker-compose.yml
          sed -i 's|build: ./CatalogService|image: localhost:5000/fooddelivery-catalog:latest|g' docker-compose.yml
          sed -i 's|build: ./OrderService|image: localhost:5000/fooddelivery-order:latest|g' docker-compose.yml
          sed -i 's|build: ./CourierService|image: localhost:5000/fooddelivery-courier:latest|g' docker-compose.yml
          
          docker-compose up -d
          sleep 30
          
          # Проверяем, что ключевые сервисы запущены
          for service in auth-service user-service gateway-service; do
            if [ -z "$(docker ps -q -f name=$service)" ]; then
              echo "Error: $service container is not running"
              docker-compose logs $service
              docker-compose down --volumes
              exit 1
            fi
          done
          
          # Проверяем доступность Gateway
          curl -f http://localhost:8080/actuator/health || {
            echo "Error: Gateway health endpoint not accessible"
            docker-compose logs gateway-service
            docker-compose down --volumes
            exit 1
          }
          
          echo "✅ Все тесты пройдены успешно!"
          docker-compose down --volumes