openapi: 3.0.0
info:
  title: User Service API
  version: 1.0.0

servers:
  - url: http://localhost:8082

paths:
  /api/users/me:
    get:
      summary: Получить мой профиль
      parameters:
        - name: X-User-Id
          in: header
          required: true
          schema: {type: string}
      responses:
        '200':
          description:
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: {type: string}
                  email: {type: string}
                  firstName: {type: string}
                  lastName: {type: string}

    put:
      summary: Обновить профиль
      parameters:
        - name: X-User-Id
          in: header
          required: true
          schema: {type: string}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName: {type: string}
                lastName: {type: string}
                phoneNumber: {type: string}
      responses:
        '200': {description: OK}

  /api/users/me/addresses:
    get:
      summary: Получить мои адреса
      parameters:
        - name: X-User-Id
          in: header
          required: true
          schema: {type: string}
      responses:
        '200':
          description:
          content:
            application/json:
              schema:
                type: array
                items: {type: string}

    post:
      summary: Добавить адрес
      parameters:
        - name: X-User-Id
          in: header
          required: true
          schema: {type: string}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                address: {type: string}
      responses:
        '201': {description: Created}

  /api/internal/users/{userId}:
    get:
      summary: Получить пользователя (для Order Service)
      parameters:
        - name: userId
          in: path
          required: true
          schema: {type: string}
      responses:
        '200':
          description:
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: {type: string}
                  email: {type: string}
                  addresses:
                    type: array
                    items: {type: string}